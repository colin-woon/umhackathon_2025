# Configuration for ML Trading Strategy

# --- Data Settings ---
data_directory: "data"
page_limit: 1000

# --- Data Download Settings (Used by download_data.py) ---
# API key is read from environment variable CYBOTRADE_API_KEY

# Define metrics and candles to download
# Structure: {source: [ {path: "endpoint_path", params: {key: value, ...}}, ... ]}
# VERIFY paths and parameter values (exchange, window, i, a, symbol, interval) against cybotrade.rs docs!
metrics_to_download:
  cryptoquant:
    - path: "btc/exchange-flows/inflow"
      params: { exchange: "binance", window: "day" }
    - path: "btc/market-data/funding-rates"
      params: { exchange: "binance", window: "day" }
  glassnode:
    - path: "addresses/active_count"
      params: { a: "BTC", i: "24h" }
    - path: "transactions/count"
      params: { a: "BTC", i: "24h" }
  coinglass:
    - path: "futures/openInterest/ohlc-history"
      params: { exchange: "Binance", symbol: "BTCUSDT", interval: "1d" }
    - path: "futures/globalLongShortAccountRatio/history"
      params: { exchange: "Binance", symbol: "BTCUSDT", interval: "1d" }
  # Candle source uses a slightly different structure if needed, or can follow path/params
  candles:
     - source_override: "bybit-linear"
       path: "candle"
       params: { symbol: "BTCUSDT", interval: "1d"}


# Time periods for downloading data (Unix timestamp in milliseconds)
# Backtest Period
# backtest_start_time_ms: 1577836800000     # Jan 1 2020
backtest_start_time_ms: 1609459200000     # Jan 1 2021
backtest_end_time_ms: 1704067199000       # Dec 31 2023
# Forward Test Period
forwardtest_start_time_ms: 1704067200000  # Jan 1 2024
forwardtest_end_time_ms: 1735689600000    # Jan 1 2025

# Data Preprocessing Settings
# Define a dictionary of data files to load
# eg:
# [KEY] -- name of the dataset loaded, can be any name
# [file_base] -- base name of the file to load, without these extensions (_backtest, _forwardtest, .csv)
# [original_columns] -- list of columns to load from the file (sometimes files have value or v, so we need to cover the possibilities)
# [target_column] -- name of the column to use in the final dataset (rename the original column to this name)
#
# Example:
# cryptoquant_funding:
#   file_base: "cryptoquant_btc_market-data_funding-rates"
#   original_columns: ["fundingRate", "value"]
#   target_column: "cryptoquant_funding_rate"

data_files:
  candles:
    file_base: "bybit-linear_candle"
  cryptoquant_inflow:
    file_base: "cryptoquant_btc_exchange-flows_inflow"
    original_columns: ["value"]
    target_column: "cryptoquant_inflow_value"
  cryptoquant_funding:
    file_base: "cryptoquant_btc_market-data_funding-rates"
    original_columns: ["fundingRate", "value"]
    target_column: "cryptoquant_funding_rate"
  glassnode_active:
    file_base: "glassnode_addresses_active_count"
    original_columns: ["value", "v"]
    target_column: "glassnode_active_value"
  glassnode_tx:
    file_base: "glassnode_transactions_count"
    original_columns: ["value", "v"]
    target_column: "glassnode_tx_value"
  coinglass_oi:
    file_base: "coinglass_futures_openInterest_ohlc-history"
    original_columns: ["openInterest", "c"]
    target_column: "coinglass_oi_value"
  coinglass_lsr:
    file_base: "coinglass_futures_globalLongShortAccountRatio_history"
    original_columns: ["longShortRatio", "value"]
    target_column: "coinglass_lsr_value"

# Features to use for HMM model training (Candidate Pool based on Research)
# Note: Some features (e.g., TAAR, Perp_Spot_Gap) may require additional data sources or calculations not explicitly listed in your initial dataset configuration.
# Parameter values (e.g., 7d, 14d, 90d, k) are suggestions and should be optimized during model development.
permutation_test_runs: 100
feature_corr_threshold: 0.95
features:
  # --- Price-based Features (Bybit Candle Data) ---
  - "price_return"                 # Daily return (kept from original)
  - "volatility_10d"               # 10-day volatility (kept from original)
  - "price_range_ratio_ohlc"       # (High - Low) / Close from candle data [1]
  - "price_body_ratio_ohlc"        # abs(Close - Open) / Close from candle data [1]
  # --- Funding Rate based Features (CryptoQuant - Binance) ---
  - "cryptoquant_funding_rate"     # Raw daily funding rate (kept from original) [2]
  - "funding_rate_change_1d"       # Daily change in funding rate (kept from original) [2]
  - "funding_rate_MA_7d"           # 7-day Moving Average of funding rate [3, 4]
  - "funding_rate_percentile_90d"  # 90-day rolling percentile rank of funding rate
  - "funding_rate_extreme_flag"    # Binary: 1 if percentile > 95% or < 5%, else 0
  - "funding_rate_sign_change_flag" # Binary: 1 if funding rate sign flipped from previous day
  - "funding_rate_vol_adjusted"    # Funding Rate / Price Volatility (e.g., ATR) [User Query 7]
  # --- Active Addresses based Features (Glassnode) ---
  - "glassnode_active_addr_value"  # Raw daily active addresses (renamed from original) [5, 6]
  - "active_addr_roc_14d"          # 14-day Rate of Change of active addresses [7, 8]
  - "active_addr_momentum_30d_365d" # SMA(ActiveAddr, 30) / SMA(ActiveAddr, 365) [7, 9, 10]
  # --- Transaction Count based Features (Glassnode) ---
  - "glassnode_tx_count_value"     # Raw daily transaction count (renamed from original) [6, 11]
  - "tx_count_roc_14d"             # 14-day Rate of Change of transaction count
  # --- Combined/Ratio Features ---
  - "inflow_active_addr_ratio_7d"  # SMA(Binance Inflow, 7) / SMA(Active Addresses, 7) [12]
  - "taar_30d"                     # Transaction Amount to Active Addresses Ratio (Requires Adjusted Tx Volume) [12]
  - "exchange_whale_ratio_7d"      # SMA(Top10 Binance Inflows, 7) / SMA(Total Binance Inflows, 7) [13, 14]
  - "perp_spot_gap_ratio"          # (Perp Price - Spot Price) / Spot Price (Requires Spot Index Price) [15, 10]
  # --- Exchange Inflow based Features (CryptoQuant - Binance) ---
  - "cryptoquant_inflow_value"     # Raw daily exchange inflow (kept from original) [16, 17]
  - "inflow_spike_flag_30d"        # Binary: 1 if inflow > SMA(30d) + k*StdDev(30d), else 0
  - "inflow_vol_adjusted"          # Exchange Inflow / Price Volatility (e.g., ATR) [User Query 7]
  # --- Open Interest based Features (Coinglass - Binance BTCUSDT) ---
  - "coinglass_oi_value"           # Raw daily Open Interest (closing value assumed) (kept from original) [18, 19]
  - "oi_roc_7d"                    # 7-day Rate of Change of Open Interest [14, 20]
  - "oi_spike_flag"                # Binary: 1 if OI RoC exceeds a predefined threshold
  - "oi_range_ratio_ohlc"          # (OI High - OI Low) / OI Close from OI OHLC data [14]
  - "oi_net_change_ratio_ohlc"     # (OI Close - OI Open) / OI Open from OI OHLC data [14]
  # --- Long/Short Ratio based Features (Coinglass - Binance BTCUSDT) ---
  - "coinglass_lsr_value"          # Raw Long/Short Ratio (renamed from original) [21, 22]
  - "lsr_MA_7d"                    # 7-day Moving Average of Long/Short Ratio
  - "lsr_zscore_90d"               # 90-day rolling Z-score of Long/Short Ratio [User Query 5]
  - "lsr_extreme_flag"             # Binary: 1 if Z-score > 2 or < -2 [User Query 5]
  # --- Interaction Features ---
  - "oi_change_x_price_change"     # OI RoC * Price Return [7, 20]
  - "funding_rate_x_oi_change"     # Smoothed Funding Rate * OI RoC

# HMM Settings
stability_num_backtest_chunks: 3
# Avoid going more than 8 states for HMM, as it can lead to overfitting
min_hmm_states: 3
max_hmm_states: 8
# Options: "spherical", "diag", "full", "tied"
hmm_covariance_type: "tied"
hmm_iterations: 1000
state_stability_threshold: 20

# Trading Strategy Settings
trading_fee_percent: 0.0006

# Map HMM states to trading signals (0=Do Nothing, 1=Buy, -1=Sell)
signal_map:
  0: 0   # Strong negative return, high LSR
  1: 1   # Positive return, extreme funding
  2: 1   # Positive return, low vol
  3: 0  # High vol consolidation
  4: -1   # Positive return, very high LSR
  5: 1   # Crash / Capitulation
  6: 1  # Strong bullish momentum / blow-off
  7: -1  # Negative return, low vol

# Backtest/Forward Test Execution Settings
# Options: "backtest", "forwardtest"
# run_mode: "backtest"
# run_mode: "forwardtest"
